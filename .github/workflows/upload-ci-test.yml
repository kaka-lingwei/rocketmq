name: Upload-CI-TEST

on:
  pull_request:
  #schedule:
  #  - cron: "0 18 * * *" # TimeZone: UTC 0
concurrency:
  group: rocketmq-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
jobs:
  dist-tar:
    if: always()
    name: Build dist tar
   # needs: [unit-test]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "8"
          cache: "maven"
      - name: Build distribution tar
        run: |
          mvn -Prelease-all -DskipTests clean install -U
          ls
          pwd
      - name: Tar files
        run: |
          tar -zcvf sourceCode.tar.gz *
      - uses: actions/upload-artifact@v3
        name: Upload distribution tar
        with:
          name: sourceCode
          path: sourceCode.tar.gz
  deploy:
    if: always()
    name: Deploy RocketMQ
    needs: [dist-tar]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: kaka-lingwei/cloud-native-test-ci-tool@v0.0.3
        name: Deploy rocketmq
        with:
          action: "deploy"
          ask-config: "${{ secrets.ASK_CONFIG }}"
          test-version: "develop-727544dc-4225-4bdb-b543-39239d469cc1-ubuntu"
          docker-repo-username: "${{ secrets.DOCKER_REPO_USERNAME }}"
          docker-repo-password: "${{ secrets.DOCKER_REPO_PASSWORD }}"
          chart-git: "https://ghproxy.com/https://github.com/cryptoya/rocketmq-docker.git"
          chart-branch: "master"
          chart-path: "./rocketmq-k8s-helm"
          job-id: ${{ strategy.job-index }}
          source-code-git: "https://ghproxy.com/https://github.com/apache/rocketmq.git"
          source-code-branch: "develop"

  e2e-test:
    if: always()
    name: E2E Test
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - uses: actions/download-artifact@v3
        name: Download distribution tar
        with:
          name: sourceCode
          path: sourceCode
      - name: show information
        run: |
          ls
          pwd
      - uses: kaka-lingwei/cloud-native-test-ci-tool@v0.0.9
        name: e2e test
        with:
          action: "test"
          ask-config: "${{ secrets.ASK_CONFIG }}"
          test-version: "${{ matrix.version }}"
          test-code-git: "https://ghproxy.com/https://github.com/apache/rocketmq-e2e.git"
          test-code-branch: "master"
          test-code-path: java/e2e
          test-cmd: "mvn -B test -Dgroups=smoke "
          job-id: ${{ strategy.job-index }}
          source-code-git: "https://ghproxy.com/https://github.com/apache/rocketmq.git"
          source-code-branch: "develop"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/test_report/TEST-*.xml'
          annotate_only: true
          include_passed: true
          detailed_summary: true
      - name: show information2
        run: |
          ls
          pwd
      - name: Upload Coverage Report To Codecov
        uses: codecov/codecov-action@v3
        if: always() # always run even if the previous step fails
        with:
          files: jacoco.xml # optional
          name: rocketmq codecov # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
          flags: integration # optional



  clean:
    if: always()
    name: Clean
    needs: [e2e-test]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: alibaba/cloud-native-test-ci-tool@v0.0.1
        name: clean
        with:
          action: "clean"
          ask-config: "${{ secrets.ASK_CONFIG }}"
          test-version: "${{ matrix.version }}"
          job-id: ${{ strategy.job-index }}
